--- ../src/process.c	2022-10-04 16:12:55.949288740 -0400
+++ ckstyle/process.c.gnu	2022-10-04 16:13:41.985720482 -0400
@@ -1,9 +1,9 @@
+#include "builtins.h"
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
-#include <unistd.h>
 #include <sys/wait.h>
-#include "builtins.h"
+#include <unistd.h>
 
 // The contents of this file are up to you, but they should be related to
 // running separate processes. It is recommended that you have functions
@@ -42,7 +42,7 @@
 void
 runCmd (char *command, char *arguments, int fd[2])
 {
-  pid_t child_pid = fork();
+  pid_t child_pid = fork ();
 
   if (child_pid < 0)
     return;
@@ -54,7 +54,8 @@
       char *token1 = strtok (writeableArgument, " ");
       char *token2 = strtok (NULL, " ");
       char *token3 = strtok (NULL, "\\n");
-      //printf ("token1=[%s] token2=[%s] token3=[%s] command: [%s]\n", token1, token2, token3, command);
+      // printf ("token1=[%s] token2=[%s] token3=[%s] command: [%s]\n", token1,
+      // token2, token3, command);
       close (fd[0]); // close read end of pipe
       dup2 (fd[1], STDOUT_FILENO);
       if (strlen (writeableArgument) == 0)
@@ -82,13 +83,13 @@
     {
       // SECOND COMMAND
       dup2 (fd[0], STDIN_FILENO);
-      char *arguments = strdup (commandTwo); 
+      char *arguments = strdup (commandTwo);
       char *token = strtok (commandTwo, " ");
       arguments = &arguments[strlen (token) + 1];
       printf ("command2: [%s], arguments: [%s]\n", token, arguments);
-      runCmd(token, arguments, fd);
+      runCmd (token, arguments, fd);
       // FIRST COMMAND
-      arguments = strdup (commandOne); 
+      arguments = strdup (commandOne);
       token = strtok (commandOne, " ");
       arguments = &arguments[strlen (token)];
       printf ("command: [%s], arguments: [%s]\n", token, arguments);
